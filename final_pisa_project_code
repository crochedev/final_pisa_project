
```
###Caitlin's Final R For Archaeology Project###
#Step 1 install the dataset I was to use (found on CRAN)#

install.packages("zoolog")

dataFile <- system.file("extdata", "dataValenzuelaLamas2008.csv.gz",
                        package="zoolog")
dataframe1 <- utils::read.csv2(dataFile,
                                na.strings = "",
                                encoding = "UTF-8")
#changed from dataExample to dataframe

View(dataframe1)

#step 2 install relevent packages
install.packages("dplyr")
library(dplyr)
library(ggplot2)
```
#step 2; 
#reduce table into the columns needed and rename it.
```
# Select specific columns by name
new_df <- dataframe1[, c("Site", "Especie", "Os","Lat", "Epif", "TAQ", "TPQ", 
                         "GL", "BT", "Bp", "GB", "SH", "SB")]

# Print the new data frame
View(new_df)
nrow(new_df)


###inserted step ####
#i think it would be best to seperate each site so that it has its own table to 
#be analysed from.

#ALP
alp_table <- new_df %>% filter(Site == "ALP")
View(alp_table)

#plot a bar chart of species frequency 
alp_filtered <- alp_table %>% filter(Species %in% c("bota", "sudo", "meso", "cahi", "ovar"))

ggplot(alp_filtered, aes(x = Species)) +
  geom_bar() +
  labs(title = "Frequency of Values in 'Species'", x = "Species", y = "Frequency")



#OLD
old_table <- new_df %>% filter(Site == "OLD")
View(old_table)

#plot a bar chart of species frequency 
old_filtered <- old_table %>% filter(Species %in% c("bota", "sudo", "meso", "cahi", "ovar"))

ggplot(old_filtered, aes(x = Species)) +
  geom_bar() +
  labs(title = "Frequency of Values in 'Species'", x = "Species", y = "Frequency")



#TFC
tfc_table <- new_df %>% filter(Site == "TFC")
View(tfc_table)

#plot a bar chart of species frequency 
tfc_filtered <- old_table %>% filter(Species %in% c("bota", "sudo", "meso", "cahi", "ovar"))

ggplot(tfc_filtered, aes(x = Species)) +
  geom_bar() +
  labs(title = "Frequency of Values in 'Species'", x = "Species", y = "Frequency")


#rename the 'Especie' column name to 'Species'(NEED TO FIND OUT WHAT SPECIES IS WHAT)
new_df <- new_df %>% rename(Species = Especie)
#check it works
View(new_df)
```

#step 3;
#Study aim one - I want to prove that the size(length and breadth measurements)
#of animal bone remains decreased over time (due to domestication). 
```

#step 3.a; select specific bone, section of bone and 2 measurements to take, 
#in ref to publication and results in the table.

# Humerus for cattle, sheep/goat and pig as there are measurements for bredth 
#and width for both of these clearly labeled on Table 2 of the study. 

#step 3.b; create linear regression model of length vs bredth.
#starting with --- aka ovar (as bota aka cattle did not have enough data that 
#could fulfill GL,BT and bota)

new_df_filtered_ovar <- new_df %>% filter(Species == "ovar")

new_df_filtered_ovar.lm1 <- lm(GL ~ BT, data = new_df_filtered_ovar)

summary(new_df_filtered_ovar.lm1)

ggplot(data = new_df_filtered_ovar, mapping = aes(x = BT, y = GL)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, aes(colour = "Regression")) +
  geom_line(aes(y = mean(GL), colour = "Average"))


#step 3.c; scatterplot of results (on a timescale). I wanted to put it on a 
#timescale but due to the lack of results that align it is not possible to do so. 

plot(x = new_df_filtered$BT, y = new_df_filtered$GL, 
     main = "Scatterplot of GL vs BT", 
     xlab = "BT", ylab = "GL", pch = 19, col = "blue") 



```
#step 4;
#study aim two - I want to prove that there is a regional difference between 
#animal sizes at the same periods of time. 

#step 4.a; select a time period to test all of the regions against.

#step 4.b; divide regions/sites and take the average bone size for a specific 
#species in step 3.

#step 4.c; create scatterplot of regions/ sites vs bone size. 



#step 5
#	Use "Epif" column use s=fused vs ns=unfused to find and compare frequency.
#Barplot of percentages
```
#For the site at ALP we want to find the frequency of fusion at the following 
#stages:
#s= fused, 
#ns= unfused, 
#ec = fusion visible. 
#Disregarding other factors such as tooth wear that have been recorded. 
freq_table_alp <- table(alp_table$Epif)
print(freq_table_alp)

valid_values <- c("s", "ns", "ec")

# Loop through the rows and remove rows where 'Epif' is not "s", "ns" or "ec"
alp_filtered <- alp_table[alp_table$Epif %in% valid_values, ]

# Print the filtered data frame
print(alp_filtered)

# Re-create the frequency table for the filtered data
freq_table_filtered <- table(alp_filtered$Epif)
print(freq_table_filtered)

alp_plot <- ggplot(data = alp_filtered, aes(x = Epif, fill = Epif)) +
  geom_bar(color = "black", alpha = 0.7) +  # Bar plot with black borders
  labs(title = "Frequency of Fusion for the site ALP Categories", x = "Epif Category", y = "Count") +
  scale_fill_manual(values = c("s" = "skyblue", "ns" = "#1C86EE", "ec" = "#B0C4DE")) +  # Custom colors
  theme_minimal()  # Clean theme for better aesthetics
print(alp_plot)
#This shows that across all species at the site ALP there was a higher number of
#unfused animal remains found showing that they died before adulthood. This
#is most likely to be due to human interference and farming practices as they 
#are eaten when they are large enough but have not been allowed to mature. 
#Although there is also an amount of animals found here that have reached adulthood
#as their bones are fully fused. This means that the animals which reached
#maturity may have been used for other farming methods such as wool or milk production.

#For the site at OLD we want to find the frequency of fusion at the following 
#stages:
#s= fused, 
#ns= unfused, 
#ec = fusion visible. 
#Disregarding other factors such as tooth wear that have been recorded. 
freq_table_old <- table(old_table$Epif)
print(freq_table_old)

valid_values <- c("s", "ns", "ec")

# Loop through the rows and remove rows where 'Epif' is not "s", "ns" or "ec"
old_filtered <- old_table[old_table$Epif %in% valid_values, ]

# Print the filtered data frame
print(old_filtered)

# Re-create the frequency table for the filtered data
freq_old_filtered <- table(old_filtered$Epif)
print(freq_old_filtered)

old_plot <- ggplot(data = old_filtered, aes(x = Epif, fill = Epif)) +
  geom_bar(color = "black", alpha = 0.7) +  # Bar plot with black borders
  labs(title = "Frequency of Fusion for the site OLD Categories", x = "Epif Category", y = "Count") +
  scale_fill_manual(values = c("s" = "palevioletred1", "ns" = "#EE1289", "ec" = "#FF0000"))+ theme_minimal()  # Clean theme for better aesthetics

print(old_plot)
#For the site at TFC we want to find the frequency of fusion at the following 
#stages:
#s= fused, 
#ns= unfused, 
#ec = fusion visible. 
#Disregarding other factors such as tooth wear that have been recorded. 
freq_table_tfc <- table(tfc_table$Epif)
print(freq_table_tfc)

valid_values <- c("s", "ns", "ec")

# Loop through the rows and remove rows where 'Epif' is not "s", "ns" or "ec"
tfc_filtered <- tfc_table[tfc_table$Epif %in% valid_values, ]

# Print the filtered data frame
print(tfc_filtered)

# Re-create the frequency table for the filtered data
freq_tfc_filtered <- table(tfc_filtered$Epif)
print(freq_tfc_filtered)

tfc_plot <- ggplot(data = tfc_filtered, aes(x = Epif, fill = Epif)) +
  geom_bar(color = "black", alpha = 0.7) +  # Bar plot with black borders
  labs(title = "Frequency of Fusion for the site ALP Categories", x = "Epif Category", y = "Count") +
  scale_fill_manual(values = c("s" = "#98FB98", "ns" = "#00FF7F", "ec" = "palegreen4")) +  # Custom colors
  theme_minimal()  # Clean theme for better aesthetics
print(tfc_plot)

#This is to show a comparison of fusion frequency from across the sites alp, old and tfc.
grid.arrange(alp_plot, old_plot, tfc_plot, ncol = 3)


```



